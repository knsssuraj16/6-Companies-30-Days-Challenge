// { Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution {
  public:
  int helper(int n, int k , int arr[],bool tnx,int i,vector<vector<vector<int>>> &dp){
    
        if( i == n || k == 0){
            return 0;
        }
      if(dp[i][k][tnx] != -1){
          return dp[i][k][tnx];
      }
      int tot1 = helper(n,k,arr,tnx,i+1,dp);
      int tot;
      if(tnx){
          tot = arr[i] + helper(n,k-1,arr,false,i+1,dp);
       }else{
          if(k>0)
          tot = helper(n,k,arr,true,i+1,dp) - arr[i];
      }
      
      dp[i][k][tnx]= max(tot, tot1);
      return max(tot, tot1);
  }
    int maxProfit(int K, int N, int A[]) {
        // code here
        vector<vector<vector<int>>> dp(N+1,vector<vector<int>>(K+1,vector<int>(2,-1)));
        return helper(N,K,A,false,0,dp);
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, K;
        cin >> K;
        cin >> N;
        int A[N];
        for (int i = 0; i < N; i++) cin >> A[i];

        Solution ob;
        cout << ob.maxProfit(K, N, A) << endl;
    }
    return 0;
}  // } Driver Code Ends