class Solution {
public:
    int longestMountain(vector<int>& A) {
        if(A.size() < 3){
            return 0;
        }
//         vector<int> up(arr.size(),0);
//         vector<int> down(arr.size(),0);
        
//         for(int i=1 ; i< arr.size(); i++){
//             if(arr[i] > arr[i-1]){
//                 up[i] = up[i-1]+1;
//             }
//         }
        
//         for(int i =arr.size()-2; i>= 0; i--){
//             if(arr[i] > arr[i+1]){
//                 down[i] = down[i+1]+1;
//             }
        
//         }
//         int mx =0;
//         for(int i =0 ;i< arr.size(); i++){
//             if(up[i]>0 && down[i] > 0)
//             mx= max(mx, up[i]+down[i]+1);
//         }
        
        int res = 0, up = 0, down = 0;
        for (int i = 1; i < A.size(); ++i) {
            if (down > 0 && A[i - 1] < A[i] || A[i - 1] == A[i]) 
                up = down = 0;
            if (A[i - 1] < A[i]) up++;
            if (A[i - 1] > A[i]) down++;
            cout << up <<" ";
            if (up > 0 && down > 0 && up + down + 1 > res) res = up + down + 1;
        }
        return res;
      
        
        // return mx;
    }
};